ARG secretsDir=/run/secrets
ARG publicUrl=https://www.pasifikateachers.org/cms/




# Build image to build admin dashboard
FROM strapi/base:14-alpine as builder
WORKDIR /app
COPY . .
RUN npm install

ARG secretsDir
ARG publicUrl

ENV NODE_ENV=production
ENV SECRETS_DIR=${secretsDir}
# Important: PUBLIC_URL needs to be defined when building the admin dashboard (strapi build) so that
# the relative url of resources for the admin dashboard can be correctly determined based on the public url
ENV PUBLIC_URL=${publicUrl}

RUN npm run build




# Build final image
FROM strapi/base:14-alpine as final

ARG secretsDir
ARG publicUrl

ENV NODE_ENV=production
# Docker secrets directory
ENV SECRETS_DIR=${secretsDir}
ENV PUBLIC_URL=${publicUrl}

WORKDIR /app
# Copy compiled/transpiled server-side code to final image
COPY --from=builder /app/public ./public
COPY --from=builder /app/config ./config
COPY --from=builder /app/lib ./lib
COPY --from=builder /app/build ./build
COPY --from=builder /app/src ./src
COPY --from=builder /app/package* ./

# Make all files in /app belong to user:group `node:node`
RUN chown -R node:node /app

USER node
EXPOSE 3000
VOLUME ["/app/public"]

# Install npm packages needed in production only.
RUN npm ci

# Start server.
CMD ["./node_modules/.bin/strapi", "start"]
